{"ast":null,"code":"var _jsxFileName = \"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  //To implement the user redirection fonctionality\n  let history = useHistory(); //getting login data through react hook forms and setting it using usestate\n\n  const [logindata, setLoginData] = useState(); //Dealing with the response i get back from the server after the login phase\n\n  const [message, setMessage] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => setLoginData(data);\n\n  const postLoginData = async () => {\n    const email = logindata.email;\n    const password = logindata.password;\n    axios.post(\"http://localhost:5000/api/user/login\", {\n      email: email,\n      password: password\n    }).then(response => {\n      if (response.status === 200) {\n        history.push(\"/profile\");\n      }\n    }).catch(error => {\n      history.push(\"/login\");\n      setMessage(error.response.data.message);\n    });\n  };\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" shadow-lg m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col p-3 bg-red-500 w-full text-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-9 w-10\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-red-800 text-center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"flex flex-col bg-white p-8 justify-center min-h-full \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2 border-2 w-full\",\n            ...register(\"email\"),\n            required: true,\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2\\xA0 border-2 w-full\",\n            ...register(\"password\"),\n            required: true,\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\",\n          type: \"submit\",\n          value: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-4 font-cookie text-xl text-center\",\n          children: [\"Pas Encore Inscrit?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-800 hover: cursor-pointer hover:text-red-800\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              exact: true,\n              to: \"register\",\n              children: \"Inscrivez-vous Maintenant.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"BDX8AdvFd8LyNcu4dLOsOmJamnw=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js"],"names":["React","useState","useEffect","Link","useHistory","useForm","axios","Login","history","logindata","setLoginData","message","setMessage","register","handleSubmit","onSubmit","data","postLoginData","email","password","post","then","response","status","push","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  //To implement the user redirection fonctionality\n\n  let history = useHistory();\n\n  //getting login data through react hook forms and setting it using usestate\n  const [logindata, setLoginData] = useState();\n\n  //Dealing with the response i get back from the server after the login phase\n  const [message, setMessage] = useState(\"\");\n\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => setLoginData(data);\n\n  const postLoginData = async () => {\n    const email = logindata.email;\n    const password = logindata.password;\n\n    axios\n      .post(\"http://localhost:5000/api/user/login\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          history.push(\"/profile\");\n        }\n      })\n      .catch((error) => {\n        history.push(\"/login\");\n        setMessage(error.response.data.message);\n      });\n  };\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n\n  return (\n    <div className=\"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\">\n      <div className=\" shadow-lg m-auto\">\n        <div className=\"flex flex-col p-3 bg-red-500 w-full text-center justify-center\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-9 w-10\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        </div>\n        \n        <h1 className=\"text-red-800 text-center\">{message}</h1>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"flex flex-col bg-white p-8 justify-center min-h-full \"\n        >\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              className=\"p-1 sm:p-2 border-2 w-full\"\n              {...register(\"email\")}\n              required\n              type=\"email\"\n              name=\"email\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Password:\n            </label>\n            <input\n              className=\"p-1 sm:p-2  border-2 w-full\"\n              {...register(\"password\")}\n              required\n              type=\"password\"\n              name=\"password\"\n            />\n          </div>\n\n          <input\n            className=\"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\"\n            type=\"submit\"\n            value=\"Se connecter\"\n          />\n\n          <p className=\"p-4 font-cookie text-xl text-center\">\n            Pas Encore Inscrit?{\" \"}\n            <span className=\"text-green-800 hover: cursor-pointer hover:text-red-800\">\n              <Link exact to=\"register\">\n                Inscrivez-vous Maintenant.\n              </Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}