{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fonsa\\\\Desktop\\\\projet\\\\Questpaper\\\\questpaper\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  let {\n    isAuth: isAuth,\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth === true) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 23\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 23\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/fonsa/Desktop/projet/Questpaper/questpaper/frontend/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;AAEA,MAAMC,cAAc,GAAG,QAAqD;AAAA,MAApD;AAACC,IAAAA,MAAM,EAAEA,MAAT;AAAiBC,IAAAA,SAAS,EAAEC,SAA5B;AAAuC,OAAGC;AAA1C,GAAoD;AACxE,sBACG,QAAC,KAAD,OAAWA,IAAX;AAAkB,IAAA,MAAM,EAAGC,KAAD,IAAU;AAChC,UAAGJ,MAAM,KAAK,IAAd,EAAmB;AACf,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGI;AACD,4BAAQ,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACK,YAAAA,QAAQ,EAAE,GAAX;AAAgBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAvB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAR;AACF;AACJ;AAPD;AAAA;AAAA;AAAA;AAAA,UADH;AAUH,CAXD;;KAAMT,c;AAaN,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({isAuth: isAuth, component: Component, ...rest}) => {\r\n    return (\r\n       <Route {...rest}  render={(props) =>{\r\n           if(isAuth === true){\r\n               return <Component/>\r\n           }\r\n           else{\r\n              return  <Redirect to={{pathname: '/', state: {from: props.location} }} />\r\n           }\r\n       }}/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n"]},"metadata":{},"sourceType":"module"}