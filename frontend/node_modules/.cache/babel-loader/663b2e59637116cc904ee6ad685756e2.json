{"ast":null,"code":"var _jsxFileName = \"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Uploadcore.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useForm } from \"react-hook-form\";\nimport { useJwt } from \"react-jwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Uploadcore = () => {\n  _s();\n\n  const [donneeform, setDonneeForm] = useState([]);\n  const [upconfirm, setupConfirm] = useState();\n  const [filename, setFilename] = useState(\"..\"); //file data to be appended\n\n  const [file, setFile] = useState(); //level and speciality data\n\n  const [specialite, setSpecialite] = useState();\n  const [level, setLevel] = useState();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    setDonneeForm(data); //reset();\n  };\n\n  const [tokenvalue, setToken] = useState();\n  const {\n    decodedToken,\n    isExpired\n  } = useJwt(tokenvalue);\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [updata, setUpdata] = useState('');\n\n  const sendData = async formData => {\n    try {\n      const options = {\n        onUploadProgress: ProgressEvent => {\n          const {\n            loaded,\n            total\n          } = ProgressEvent;\n          let percent = Math.floor(loaded * 100 / total);\n          setUpdata(`${loaded}kb of ${total}kb| ${percent}`);\n\n          if (percent < 100) {\n            setUploadPercentage(percent);\n          } else if (percent = 100) {//history.push('/secondary');\n          }\n        }\n      };\n      await axios.post(\"http://localhost:5000/api/user/upload\", formData, options).then(res => setupConfirm(res.data.message), reset).catch(err => console.log(err));\n      setUploadPercentage(100, () => {\n        setTimeout(() => {\n          setUploadPercentage(0);\n        }, 1000);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(uploadPercentage);\n  useEffect(async () => {\n    try {\n      if (donneeform) {\n        const {\n          user_email\n        } = await decodedToken.data;\n        console.log(donneeform.file[0]);\n        setFilename(donneeform.file[0].name);\n        setFile(donneeform.file[0]);\n        setLevel(donneeform.year);\n        setSpecialite(donneeform.specialite);\n        const formData = new FormData();\n        formData.append(\"name\", filename);\n        formData.append(\"user_email\", user_email);\n        formData.append(\"subject\", file);\n        formData.append(\"year\", level);\n        formData.append(\"domaine\", specialite);\n        sendData(formData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [donneeform]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setToken(token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Uploadcore, \"LcQvcp8tbZFf7RzK2Yi5W0fjHrc=\", false, function () {\n  return [useForm, useJwt];\n});\n\n_c = Uploadcore;\nexport default Uploadcore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploadcore\");","map":{"version":3,"sources":["/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Uploadcore.js"],"names":["axios","React","useState","useEffect","useHistory","useForm","useJwt","Uploadcore","donneeform","setDonneeForm","upconfirm","setupConfirm","filename","setFilename","file","setFile","specialite","setSpecialite","level","setLevel","register","handleSubmit","reset","onSubmit","data","tokenvalue","setToken","decodedToken","isExpired","uploadPercentage","setUploadPercentage","updata","setUpdata","sendData","formData","options","onUploadProgress","ProgressEvent","loaded","total","percent","Math","floor","post","then","res","message","catch","err","console","log","setTimeout","error","user_email","name","year","FormData","append","token","localStorage","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useForm } from \"react-hook-form\";\nimport { useJwt } from \"react-jwt\";\n\nconst Uploadcore = () => {\n\n\n\n  const [donneeform, setDonneeForm] = useState([]);\n\n  const [upconfirm, setupConfirm] = useState();\n\n  const [filename, setFilename] = useState(\"..\");\n\n  //file data to be appended\n  const [file, setFile] = useState();\n\n  //level and speciality data\n\n  const [specialite, setSpecialite] = useState();\n  const [level, setLevel] = useState();\n\n  const { register, handleSubmit , reset} = useForm();\n  const onSubmit = (data) => {\n    setDonneeForm(data)\n    \n    //reset();\n  };\n\n  const [tokenvalue, setToken] = useState();\n  const { decodedToken, isExpired } = useJwt(tokenvalue);\n\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [updata, setUpdata]= useState('');\n\n  const sendData = async (formData) => {\n    try {\n      const options = {\n        onUploadProgress: (ProgressEvent) => {\n          const { loaded, total } = ProgressEvent;\n          let percent = Math.floor((loaded * 100) / total);\n          setUpdata(`${loaded}kb of ${total}kb| ${percent}`);\n          if (percent < 100) {\n            setUploadPercentage(percent);\n          }else if(percent = 100){\n            //history.push('/secondary');\n          }\n        },\n      };\n     \n \n      await axios\n        .post(\"http://localhost:5000/api/user/upload\", formData, options)\n        .then((res) => setupConfirm(res.data.message), reset)\n        .catch((err) => console.log(err));\n      setUploadPercentage(100, () => {\n        setTimeout(() => {\n          setUploadPercentage(0);\n        }, 1000);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(uploadPercentage);\n\n  useEffect(async () => {\n    try {\n      if (donneeform) {\n        const { user_email} = await decodedToken.data;\n        console.log(donneeform.file[0]);\n        setFilename(donneeform.file[0].name);\n        setFile(donneeform.file[0]);\n        setLevel(donneeform.year);\n        setSpecialite(donneeform.specialite);\n\n        const formData = new FormData();\n\n        formData.append(\"name\", filename);\n\n        formData.append(\"user_email\", user_email);\n\n        formData.append(\"subject\", file);\n\n        formData.append(\"year\", level);\n\n        formData.append(\"domaine\", specialite);\n\n        sendData(formData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [donneeform]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setToken(token);\n  }, []);\n\n    return (\n        <div className=\"h-screen\">\n            \n        </div>\n    )\n}\n\nexport default Uploadcore\n"]},"metadata":{},"sourceType":"module"}