{"ast":null,"code":"var _jsxFileName = \"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth === true) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 23\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              path: location.pathname\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 23\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","location","useLocation","props","pathname","state","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAM,EAAEA,MAAT;AAAiBC,EAAAA,SAAS,EAAEC,SAA5B;AAAuC,KAAGC;AAA1C,CAAD,KAAqD;AAAA;;AACxE,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,sBACG,QAAC,KAAD,OAAWF,IAAX;AAAkB,IAAA,MAAM,EAAGG,KAAD,IAAU;AAChC,UAAGN,MAAM,KAAK,IAAd,EAAmB;AACf,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGI;AACD,4BAAQ,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACO,YAAAA,QAAQ,EAAE,QAAX;AAAqBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,QAAQ,CAACG;AAAjB;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAR;AACF;AACJ;AAPD;AAAA;AAAA;AAAA;AAAA,UADH;AAUH,CAZD;;GAAMR,c;;KAAAA,c;AAcN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = ({isAuth: isAuth, component: Component, ...rest}) => {\n    const location = useLocation();\n    return (\n       <Route {...rest}  render={(props) =>{\n           if(isAuth === true){\n               return <Component/>\n           }\n           else{\n              return  <Redirect to={{pathname: '/login', state: { path: location.pathname }  }} />\n           }\n       }}/>\n    )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}