{"ast":null,"code":"var _jsxFileName = \"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  //To implement the user redirection fonctionality\n  let history = useHistory(); //getting login data through react hook forms and setting it using usestate\n\n  const [logindata, setLoginData] = useState(); //Dealing with the response i get back from the server after the login phase\n\n  const [message, setMessage] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => setLoginData(data);\n\n  const postLoginData = async () => {\n    const email = logindata.email;\n    const password = logindata.password;\n    axios.post('http://localhost:5000/api/user/login', {\n      email: email,\n      password: password\n    }).then(response => {\n      if (response.data.code === 200) {\n        console.log(response);\n        history.push('/profile');\n      }\n    }).catch(error => {\n      history.push('/login');\n      setMessage(error.response.data.message);\n    });\n  };\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" shadow-lg m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-red-800 text-center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"flex flex-col bg-white p-8 justify-center min-h-full \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2 border-2 w-full\",\n            ...register(\"email\"),\n            required: true,\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2\\xA0 border-2 w-full\",\n            ...register(\"password\"),\n            required: true,\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\",\n          type: \"submit\",\n          value: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-4 font-cookie text-xl text-center\",\n          children: [\"Pas Encore Inscrit?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-800 hover: cursor-pointer hover:text-red-800\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              exact: true,\n              to: \"register\",\n              children: \"Inscrivez-vous Maintenant.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"BDX8AdvFd8LyNcu4dLOsOmJamnw=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js"],"names":["React","useState","useEffect","Link","useHistory","useForm","axios","Login","history","logindata","setLoginData","message","setMessage","register","handleSubmit","onSubmit","data","postLoginData","email","password","post","then","response","code","console","log","push","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACpB;AAEA,MAAIC,OAAO,GAAGJ,UAAU,EAAxB,CAHoB,CAQlB;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C,CATkB,CAYlB;;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BT,OAAO,EAA1C;;AACA,QAAMU,QAAQ,GAAIC,IAAD,IAAUN,YAAY,CAACM,IAAD,CAAvC;;AAGF,QAAMC,aAAa,GAAI,YAAU;AACjC,UAAMC,KAAK,GAAGT,SAAS,CAACS,KAAxB;AACA,UAAMC,QAAQ,GAAGV,SAAS,CAACU,QAA3B;AAEAb,IAAAA,KAAK,CAACc,IAAN,CAAW,sCAAX,EACA;AACEF,MAAAA,KAAK,EAAEA,KADT;AAEEC,MAAAA,QAAQ,EAAEA;AAFZ,KADA,EAIGE,IAJH,CAISC,QAAD,IAAa;AACnB,UAAGA,QAAQ,CAACN,IAAT,CAAcO,IAAd,KAAuB,GAA1B,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACEd,QAAAA,OAAO,CAACkB,IAAR,CAAa,UAAb;AACH;AACF,KATD,EASGC,KATH,CASUC,KAAD,IAAU;AACjBpB,MAAAA,OAAO,CAACkB,IAAR,CAAa,QAAb;AACAd,MAAAA,UAAU,CAACgB,KAAK,CAACN,QAAN,CAAeN,IAAf,CAAoBL,OAArB,CAAV;AACD,KAZD;AAaC,GAjBD;;AAqBAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGO,SAAH,EAAa;AACXQ,MAAAA,aAAa;AACd;AAEF,GALQ,EAKN,CAACR,SAAD,CALM,CAAT;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,oEAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA,kBAA0CE;AAA1C;AAAA;AAAA;AAAA;AAAA,cADD,eAEE;AAAM,QAAA,QAAQ,EAAEG,YAAY,CAACC,QAAD,CAA5B;AAAwC,QAAA,SAAS,EAAC,uDAAlD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,eAAjB;AAAiC,YAAA,OAAO,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAO,YAAA,SAAS,EAAC,4BAAjB;AAAA,eAAkDF,QAAQ,CAAC,OAAD,CAA1D;AAAqE,YAAA,QAAQ,MAA7E;AAA8E,YAAA,IAAI,EAAC,OAAnF;AAA2F,YAAA,IAAI,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,eAAjB;AAAiC,YAAA,OAAO,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAO,YAAA,SAAS,EAAC,gCAAjB;AAAA,eAAqDA,QAAQ,CAAC,UAAD,CAA7D;AAA2E,YAAA,QAAQ,MAAnF;AAAoF,YAAA,IAAI,EAAC,UAAzF;AAAoG,YAAA,IAAI,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE;AACE,UAAA,SAAS,EAAC,wDADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAsBE;AAAG,UAAA,SAAS,EAAC,qCAAb;AAAA,4CACsB,GADtB,eAEE;AAAM,YAAA,SAAS,EAAC,yDAAhB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,KAAK,MAAX;AAAY,cAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CApFD;;GAAMN,K;UAGQH,U,EAYuBC,O;;;KAf/BE,K;AAsFN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\n\nconst Login = () => {\n//To implement the user redirection fonctionality\n\nlet history = useHistory();\n\n\n\n\n  //getting login data through react hook forms and setting it using usestate\n  const [logindata, setLoginData] = useState()\n\n\n  //Dealing with the response i get back from the server after the login phase\n  const [message, setMessage] = useState(\"\")\n\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => setLoginData(data);\n\n\nconst postLoginData  = async() =>{\nconst email = logindata.email;\nconst password = logindata.password\n\naxios.post('http://localhost:5000/api/user/login',\n{\n  email: email , \n  password: password\n}).then((response) =>{\n  if(response.data.code === 200){\n    console.log(response)\n      history.push('/profile')\n  }\n}).catch((error) =>{\n  history.push('/login')\n  setMessage(error.response.data.message)\n})\n} \n\n\n\nuseEffect(() => {\n  if(logindata){\n    postLoginData()\n  }\n\n}, [logindata])\n\n\n  return (\n    <div className=\"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\">\n      <div className=\" shadow-lg m-auto\">\n       <h1 className=\"text-red-800 text-center\">{message}</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col bg-white p-8 justify-center min-h-full \">\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input className=\"p-1 sm:p-2 border-2 w-full\" {...register(\"email\")} required type=\"email\" name=\"email\" />\n          </div>\n\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Password:\n            </label>\n            <input className=\"p-1 sm:p-2  border-2 w-full\"   {...register(\"password\")} required type=\"password\" name=\"password\" />\n          </div>\n\n          <input\n            className=\"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\"\n            type=\"submit\"\n            value=\"Se connecter\" \n          />\n\n          <p className=\"p-4 font-cookie text-xl text-center\">\n            Pas Encore Inscrit?{\" \"}\n            <span className=\"text-green-800 hover: cursor-pointer hover:text-red-800\">\n              <Link exact to=\"register\">Inscrivez-vous Maintenant.</Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}