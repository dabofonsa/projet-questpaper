{"ast":null,"code":"var _jsxFileName = \"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useJwt } from \"react-jwt\"; //importing my action for the situation\n\nimport { situation } from \"../features/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //using usedispath to dispatch an action when my user will log in\n  const dispatch = useDispatch(); //To implement the user redirection fonctionality\n\n  let history = useHistory(); //getting login data through react hook forms and setting it using usestate\n\n  const [logindata, setLoginData] = useState(); //Dealing with the response i get back from the server after the login phase\n\n  const [message, setMessage] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => setLoginData(data);\n\n  const postLoginData = async () => {\n    _s();\n\n    const email = logindata.email;\n    const password = logindata.password;\n    const [token, setToken] = useState();\n    const {\n      decodedToken,\n      isExpired\n    } = useJwt(token);\n    axios.post(\"http://localhost:5000/api/user/login\", {\n      email: email,\n      password: password\n    }).then(response => {\n      let jwt = response.data.token;\n      window.localStorage['jwtToken'] = jwt;\n\n      if (response.status === 200) {\n        setToken(window.localStorage['jwtToken']);\n        console.log(decodedToken);\n        dispatch(situation(true));\n        history.push(\"/secondary\");\n      }\n    }).catch(error => {\n      history.push(\"/login\");\n      setMessage(error.response.data.message);\n    });\n  };\n\n  _s(postLoginData, \"qcHO8pQfpTXuFnHn522EDKGuAyo=\", false, function () {\n    return [useJwt];\n  });\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" shadow-lg m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col p-3 bg-gray-500 w-full text-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \" w-1/4 text-white  self-center\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-red-800 text-center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"flex flex-col bg-white p-8 justify-center min-h-full \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2 border-2 w-full\",\n            ...register(\"email\"),\n            required: true,\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-bold p-2\",\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"p-1 sm:p-2\\xA0 border-2 w-full\",\n            ...register(\"password\"),\n            required: true,\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\",\n          type: \"submit\",\n          value: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-4 font-cookie text-xl text-center\",\n          children: [\"Pas Encore Inscrit?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-800 hover: cursor-pointer hover:text-red-800\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              exact: true,\n              to: \"register\",\n              children: \"Inscrivez-vous Maintenant.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Login, \"PDE1t3zyb8sYEg8l/Wu5es9V7L8=\", false, function () {\n  return [useDispatch, useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js"],"names":["React","useState","useEffect","Link","useHistory","useForm","axios","useDispatch","useJwt","situation","Login","dispatch","history","logindata","setLoginData","message","setMessage","register","handleSubmit","onSubmit","data","postLoginData","email","password","token","setToken","decodedToken","isExpired","post","then","response","jwt","window","localStorage","status","console","log","push","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useJwt } from \"react-jwt\";\n//importing my action for the situation\n\nimport { situation } from \"../features/Login\";\n\nconst Login = () => {\n  //using usedispath to dispatch an action when my user will log in\n  const dispatch = useDispatch();\n\n  //To implement the user redirection fonctionality\n\n  let history = useHistory();\n\n  //getting login data through react hook forms and setting it using usestate\n  const [logindata, setLoginData] = useState();\n\n  //Dealing with the response i get back from the server after the login phase\n  const [message, setMessage] = useState(\"\");\n\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => setLoginData(data);\n\n  const postLoginData = async () => {\n    const email = logindata.email;\n    const password = logindata.password;\n\n    const [token, setToken]= useState();\n    const { decodedToken, isExpired } = useJwt(token);\n\n    axios\n      .post(\"http://localhost:5000/api/user/login\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n       let jwt = response.data.token;\n       window.localStorage['jwtToken'] = jwt;\n        if (response.status === 200) {\n            setToken(window.localStorage['jwtToken']);\n          console.log(decodedToken)\n          dispatch(situation(true));\n          history.push(\"/secondary\");\n        }\n      })\n      .catch((error) => {\n        history.push(\"/login\");\n        setMessage(error.response.data.message);\n      });\n  };\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n\n  return (\n    <div className=\"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\">\n      <div className=\" shadow-lg m-auto\">\n        <div className=\"flex flex-col p-3 bg-gray-500 w-full text-center justify-center\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\" w-1/4 text-white  self-center\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n\n        <h1 className=\"text-red-800 text-center\">{message}</h1>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"flex flex-col bg-white p-8 justify-center min-h-full \"\n        >\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              className=\"p-1 sm:p-2 border-2 w-full\"\n              {...register(\"email\")}\n              required\n              type=\"email\"\n              name=\"email\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Password:\n            </label>\n            <input\n              className=\"p-1 sm:p-2  border-2 w-full\"\n              {...register(\"password\")}\n              required\n              type=\"password\"\n              name=\"password\"\n            />\n          </div>\n\n          <input\n            className=\"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\"\n            type=\"submit\"\n            value=\"Se connecter\"\n          />\n\n          <p className=\"p-4 font-cookie text-xl text-center\">\n            Pas Encore Inscrit?{\" \"}\n            <span className=\"text-green-800 hover: cursor-pointer hover:text-red-800\">\n              <Link exact to=\"register\">\n                Inscrivez-vous Maintenant.\n              </Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}